@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Убираем скачок интерфейса по горизонтали
    при появлении / исчезновении скроллбара
   */
  scrollbar-gutter: stable;
}

/**
  Плавный скролл
 */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
:where([fill]:not([fill=none],
[fill^=url])) {
  fill: currentColor;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
:where([stroke]:not([stroke=none],
[stroke^=url])) {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "Inter";
  src: url("../fonts/Inter-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Inter";
  src: url("../fonts/Inter-Medium.woff2") format("woff2");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Inter";
  src: url("../fonts/Inter-SemiBold.woff2") format("woff2");
  font-weight: 600;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Inter";
  src: url("../fonts/Inter-Bold.woff2") format("woff2");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
:root {
  --color-dark: #121212;
  --color-light: #FFFFFF;
  --color-light-10: #F9F5F4;
  --color-categories: #D1A28B;
  --color-day-card: #E6D9CB;
  --color-grey: #9F9F9F;
  --color-light-grey: #F3EFEE;
  --border: 1px solid #000000;
  --container-width: 24.375rem;
  --container-padding-x: 1.375rem;
  --transition-duration: 0.2s;
  --font-family-base: "Inter", sans-serif;
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (width <= 47.99875rem) {
  .hidden-mobile {
    display: none !important;
  }
}

@media (width > 47.99875rem) {
  .visible-mobile {
    display: none !important;
  }
}

html.is-lock {
  overflow: hidden;
}

body {
  font-size: 1.0625rem;
  display: flex;
  flex-direction: column;
  font-family: var(--font-family-base);
  color: var(--color-dark);
  background-color: var(--color-light-10);
}

main {
  flex-grow: 1;
}

a,
button,
label,
input,
select,
textarea,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  color: inherit;
}
@media (any-hover: hover) {
  a:hover {
    color: var(--color-accent);
  }
}
@media (any-hover: none) {
  a:active {
    color: var(--color-accent);
  }
}
a[class] {
  text-decoration: none;
}

:focus-visible {
  outline-color: currentColor;
  transition-duration: 0.2s;
}

a[aria-label],
button[aria-label] {
  position: relative;
}
a[aria-label]::before,
button[aria-label]::before {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  width: 2.75rem;
  height: 2.75rem;
  content: "";
}

.header__inner {
  padding-block: 1.875rem;
  text-align: center;
}

.days-card {
  min-width: 4.25rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding-block: 0.75rem;
  padding-inline: 0.375rem;
  row-gap: 0.5rem;
  border: var(--border);
  border-radius: 0.5rem;
  font-weight: 600;
  opacity: 0.2;
}

.tabs__buttons {
  display: flex;
  padding-block: 2rem;
  overflow-x: auto;
}
@media (width > 47.99875rem) {
  .tabs__buttons {
    justify-content: center;
  }
}
.tabs__button {
  background-color: transparent;
  border: none;
}
.tabs__button.is-active .tabs__button-content {
  border: none;
  background-color: var(--color-day-card);
  pointer-events: none;
  opacity: 1;
}
.tabs__content:not(.is-active) {
  display: none;
}

.task-card {
  padding: 1rem;
  background-color: var(--color-light-grey);
  border-radius: 0.75rem;
}

.checkbox {
  -webkit-tap-highlight-color: transparent;
  width: 100%;
  display: inline-flex;
  align-items: center;
  column-gap: 0.625rem;
  color: var(--color-dark);
}
.checkbox__input {
  --size: 1.75rem;
  width: var(--size);
  height: var(--size);
  display: flex;
  justify-content: center;
  align-items: center;
  appearance: none;
  border: 2px solid var(--color-dark);
  margin: 0;
  background-color: transparent;
  border-radius: 0.375rem;
}
@media (width <= 90.06125rem) {
  .checkbox__input {
    --size: 1.5rem;
  }
}
.checkbox__input:not(:checked) {
  opacity: 0.6;
}
.checkbox__input:not(:checked)::after {
  color: var(--color-dark);
  opacity: 0;
  visibility: hidden;
}
.checkbox__input:checked {
  border-color: green;
  color: green;
}
.checkbox__input::after {
  content: "✓";
  transition-duration: var(--transition-duration);
}

.task-category-list {
  display: flex;
  flex-direction: column;
  row-gap: 1rem;
  margin-top: 0.625rem;
}
.task-category-list__item {
  display: grid;
  row-gap: 1rem;
}
.task-category-list__item-title {
  color: var(--color-categories);
  margin-inline: 1rem;
  font-weight: 600;
}

.tasks-list {
  display: flex;
  flex-direction: column;
  row-gap: 1rem;
}

.task-add {
  display: grid;
  grid-template-columns: auto 14%;
  align-items: center;
  column-gap: 0.75rem;
  margin-top: 5.875rem;
}
.task-add__input {
  background-color: var(--color-light-grey);
  border: none;
  border-radius: 0.75rem;
  padding-block: 1.0625rem;
  padding-left: 1.3125rem;
}
.task-add__button {
  width: 3.375rem;
  height: 3.375rem;
  background-color: var(--color-dark);
  color: var(--color-light);
  border: none;
  border-radius: 0.75rem;
}

.modal-add-task {
  position: fixed;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  padding: 1.25rem;
  border-radius: 0.75rem;
  background-color: var(--color-light-grey);
  z-index: 20;
  transition-duration: var(--transition-duration);
}
.modal-add-task__button {
  background-color: var(--color-dark);
  border: none;
  border-radius: 0.375rem;
  color: var(--color-light);
  padding-block: 0.3125rem;
}
.modal-add-task #add-task-form {
  display: flex;
  flex-direction: column;
  row-gap: 1rem;
}

.dark-bg {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 10;
}

.field {
  display: flex;
  flex-direction: column;
  align-items: start;
}
.field__label {
  font-weight: 600;
}
.field__input {
  background-color: transparent;
  border: var(--border);
  border-radius: 0.375rem;
  padding-block: 0.3125rem;
  padding-left: 0.3125rem;
}

/*# sourceMappingURL=main.css.map */
